{"version":3,"file":"treebundle.js","sources":["loadTreeData.js","treemap.js","stackedAreaVertical.js","tree_main.js"],"sourcesContent":["import { csv, hierarchy, json } from 'd3';\n// import LastFM from 'last-fm';\n\nexport const loadTreeData = url => {\n  return Promise.all([\n    csv(url), \n    json('genreHierarchy.json'),\n    json('data/artists.json'), \n    json('data/tracks.json')]\n  ).then(data => {\n    // const csvData = data[0];\n    var jsonData = data[1];\n    const artistData = data[2];\n    const trackData = data[3];\n    const startDate = new Date('2018', '00', '01')\n    const endDate = new Date('2019', '00', '01')\n\n    console.log(artistData)\n    var sortedGenreList = [];\n    var sortedArtistList = [];\n    var sortedTrackList = [];\n    var totalPlaysByArtist = {};\n    var totalPlaysByGenre = {};\n    var totalPlaysByTrack = {};\n    var deepestGenresByArtist = {};\n    \n    var topGenres = [];\n    var topArtists = [];\n    var topTracks = [];\n    var topTracksUniqueArtists = [];\n    var byWeekPlaysGenre = [];\n    var byWeekPlaysArtist = [];\n    var byWeekPlaysTrack = [];\n    var weekDict = {};\n    const numArtists = 100;\n    const numGenres = 50;\n\n    // Bad tags included in the data set. Removed anything country-specific or anything I considered 'not a genre'\n    const genresToRemove = ['seenlive', 'femalevocalists', '', 'british', 'japanese', 'ofwgkta', 'irish', 'usa', 'australia', \n      'australian', 'under2000 listeners', '90s', '80s', '70s', '60s', 'all', 'philadelphia', 'scottish', 'sanremo', 'newzealand', \n      'twinkledaddies', 'sanremo2009', 'political', 'american', 'canadian', 'italian', 'psychadelic', 'instrumental', 'ambient', \n      'chillout', 'singersongwriter', 'acoustic'];\n\n    // Remove these character from the genre names\n    const punctuationToRemove = [' ', '-'];\n\n    var genreHierarchy = hierarchy(jsonData); \n    genreHierarchy.data = jsonData; \n\n    genreHierarchy.sort((a,b) => {\n      const aLen = a.children === undefined ? 0 : a.children.length;\n      const bLen = b.children === undefined ? 0 : b.children.length;\n      return(bLen - aLen); \n    });\n        \n    genreHierarchy.descendants().forEach(d => {\n      const name = d.data.id;\n      // byWeekPlaysGenre.push(name);\n      totalPlaysByGenre[name] = { \n        depth: d.depth,\n        plays: 0,\n      };  \n    })\n        \n    trackData.forEach(d => {\n      d.listen_date = new Date(d.listen_date.$date);\n      if (d.listen_date < startDate || d.listen_date > endDate)\n        return;\n      // console.log(d)\n\n\n      d.genre = artistData.filter(a => a.name == d.artist)[0].genres\n      // console.log(d.genre)\n      if (d.genre === \"\")\n        return;\n      d.genre = d.genre\n        // .replace(/[[\\]]/g, '')\n        // .split(',')\n        .map(g => g.toLowerCase().replace(/\\s|-/g, ''))\n        .filter(g => !genresToRemove.includes(g))\n      \n      //If there's no genre we can't do much\n      if (d.genre.length == 0)\n        return;\n\n      // Convert time since Jan 1, 2018 from msec to # of weeks\n      // 1000 msec/sec, 60 sec/min, 60 min/hr, 24 hr/day, 7 days/week, +1 so it starts on week 1\n      d.weekNum = (parseInt((d.listen_date - startDate)/1000/60/60/24/7 + 1));\n      // console.log(d.weekNum)\n      const maxGenre = d.genre[0];\n      \n      if (totalPlaysByArtist[d.artist] === undefined)\n        totalPlaysByArtist[d.artist] = 1;\n      else\n        totalPlaysByArtist[d.artist] += 1;\n\n      if (totalPlaysByTrack[d.track] === undefined)\n        totalPlaysByTrack[d.track] = {artist: d.artist, track: d.track, plays: 1};\n      else\n        totalPlaysByTrack[d.track].plays += 1;\n      \n      //Add in the genres not in the tree but  give them negative depth so they are sorted last\n      d.genre.forEach(g => {\n        if (totalPlaysByGenre[g] === undefined)\n          totalPlaysByGenre[g] = { depth: -1, plays: 1};\n        else\n          totalPlaysByGenre[g].plays += 1;\n      })\n\n      d.genre.sort((a, b) => totalPlaysByGenre[b].depth - totalPlaysByGenre[a].depth); \n\n\n      if (deepestGenresByArtist[d.artist] === undefined)\n        deepestGenresByArtist[d.artist] = d.genre[0];\n      \n      if (weekDict[d.weekNum] === undefined)\n        weekDict[d.weekNum] = {artists: {}, genres: {}, tracks: {}};\n      \n      if (weekDict[d.weekNum].artists[d.artist] === undefined)\n        weekDict[d.weekNum].artists[d.artist] = 1;\n      else\n        weekDict[d.weekNum].artists[d.artist] += 1;\n        \n      if (weekDict[d.weekNum].genres[d.genre[0]] === undefined)\n        weekDict[d.weekNum].genres[d.genre[0]] = 1;\n      else\n        weekDict[d.weekNum].genres[d.genre[0]] += 1;\n\n      if (weekDict[d.weekNum].tracks[d.track] === undefined)\n        weekDict[d.weekNum].tracks[d.track] = 1;\n      else\n        weekDict[d.weekNum].tracks[d.track] += 1;\n    });\n    \n    // Sort the list of genres according to total play count\n    sortedGenreList = Object.keys(totalPlaysByGenre).sort((a, b) => totalPlaysByGenre[b].plays - totalPlaysByGenre[a].plays);\n    sortedArtistList = Object.keys(totalPlaysByArtist).sort((a, b) => totalPlaysByArtist[b] - totalPlaysByArtist[a]); \n    sortedTrackList = Object.keys(totalPlaysByTrack).sort((a, b) => totalPlaysByTrack[b].plays - totalPlaysByTrack[a].plays);\n    console.log(sortedTrackList);\n    Object.keys(weekDict).forEach(w => {\n      const i = +w - 1;\n      var obj = {week: i + 1};\n      \n      topArtists = sortedArtistList//.slice(0, numArtists);\n      topGenres = sortedGenreList//.slice(0, numGenres);\n      topTracks = sortedTrackList\n      \n      var genreObj = {week: i + 1};\n      var artistObj = {week: i + 1};\n      var trackObj = {week: i + 1};\n      \n      topArtists.forEach(a => {\n        artistObj[a] = weekDict[w].artists[a] ? weekDict[w].artists[a] : 0;\n      });\n      \n      // artistObj['everything else'] = 0;\n      // genreObj['everything else'] = 0;\n      // Object.keys(weekDict[w].artists).forEach(a => {\n      //   if (!topArtists.includes(a))\n      //     artistObj['everything else'] += weekDict[w].artists[a];  \n      // });\n      byWeekPlaysArtist.push(artistObj);\n\n      \n      // Object.keys(weekDict[w].genres).forEach(g => {\n      //   if (!topGenres.includes(g))\n      //     genreObj['everything else'] += weekDict[w].genres[g];  \n      // });\n      \n      topGenres.forEach(g => {\n        genreObj[g] = weekDict[w].genres[g] ? weekDict[w].genres[g] : 0;\n      });\n      byWeekPlaysGenre.push(genreObj); \n\n\n      topTracks.forEach(g => {\n        trackObj[g] = weekDict[w].tracks[g] ? weekDict[w].tracks[g] : 0;\n      });\n      byWeekPlaysTrack.push(trackObj); \n    });\n    // topArtists.push('everything else');\n    // console.log(topGenres)\n    // topGenres.push('everything else');\n\n\n    var toReturn = {}; \n    // toReturn.csvData = csvData; \n    toReturn.jsonData = genreHierarchy.data;\n    toReturn.byWeekPlaysGenre = byWeekPlaysGenre.reverse(); \n    toReturn.byWeekPlaysArtist = byWeekPlaysArtist;\n    toReturn.byWeekPlaysTrack = byWeekPlaysTrack;\n\n    toReturn.totalPlaysByGenre = totalPlaysByGenre;\n    toReturn.totalPlaysByArtist = totalPlaysByArtist;\n    toReturn.totalPlaysByTrack = totalPlaysByTrack;\n\n    toReturn.deepestGenresByArtist = deepestGenresByArtist;\n    toReturn.topGenres = topGenres;\n    toReturn.topArtists = topArtists;\n    toReturn.topTracks = topTracks;\n\n    toReturn.artistData = artistData;\n    toReturn.trackData = trackData;\n\n    console.log(toReturn);  \n    return toReturn;  \n  }).then(r => {return r;}); \n};","import { \n  hierarchy, \n  cluster, \n  select,\n\tlinkHorizontal\n} from 'd3';\n\nexport const treemap = (selection, props) => {\n  const {\n    jsonData,\n    deepestGenresByArtist,\n    totalPlaysArtist,\n    topArtists,\n    width,\n    height,\n    colorScale,\n    selectedLegendList,\n    onClickArtist,\n    onClickGenre\n  } = props;\n\n  //console.log(jsonData);\n\n  // const topArtistsTrimmed = topArtists.slice(0, numArtists);\n  // console.log(topArtistsTrimmed)\n  const topGenresTrimmed = topArtists.map(a => deepestGenresByArtist[a])\n  var maxGenreDepth = 0;\n  \n  const treeLayout = cluster()\n    .size([height, 0.75*width])\n    .separation((a, b) => { \n      return (a.parent == b.parent ? 1 : 1); \n    })\n\n\n  var root = hierarchy(jsonData); \n\n  root.descendants().forEach(d => {\n  //   const genre = d.data.id;\n    maxGenreDepth = d.depth > maxGenreDepth ? d.depth : maxGenreDepth;\n  //   Object.keys(deepestGenresByArtist).filter(a => deepestGenresByArtist[a] === genre).forEach(f => {\n  //     if (!topArtistsTrimmed.includes(f))\n  //       return;\n\n  //     var newNode = hierarchy({\n  //       id: f, \n  //       artist: f, \n  //       plays: totalPlaysArtist[f]\n  //     });\n\n  //     newNode.parent = d;  \n  //     if (d.children === undefined)\n  //       d.children = [];\n\n  //     d.children.push(newNode);\n  //   })\n  }) \n\n  root.sort((a,b) => {\n    var aLen = a.children === undefined ? -1 : a.children.length;\n    var bLen = b.children === undefined ? -1 : b.children.length;\n    return(bLen - aLen); \n    // console.log(a)\n    // return (b.depth - a.depth)\n  });\n  console.log(root)\n  \n  const tree = treeLayout(root);\n  var links = tree.links();   \n \n  const linkPathGenerator = linkHorizontal()\n    .x(d => d.y)\n    .y(d => d.x);\n\n  const treeSpread = d3.max([width/7, 95]);\n  selection.width = treeSpread * maxGenreDepth\n\n  // links.forEach(d => {\n  //   if (d.target.data.artist)\n  //     d.target.y = (maxGenreDepth) * treeSpread;\n  //   else\n  // \t\td.target.y = (d.target.depth) * treeSpread;\n  // }); \n\n\n  selection.selectAll('path').data(links)\n    .enter().append('path')\n      .attr('d', linkPathGenerator)\n\n  const treeText = selection.selectAll('text').data(root.descendants());\n  const treeTextEnter = treeText.enter().append('text')\n    .attr('class', d => d.data.artist ? 'artist' : 'genre')\n    .attr('x', d => d.y)\n    .attr('y', d => d.x)\n    .attr('dy', '0.32em')\n    .attr('text-anchor', d => d.data.artist ? 'start' : 'start')\n    .attr('fill', d => d.data.artist ? colorScale(d.data.id) : 'black')\n    // .attr('font-size', d => d.data.artist ? 2.1*Math.log(d.data.plays) * 2 : '1.1em')\n    .text(d => d.data.id); \n\n  treeText.merge(treeTextEnter)\n    // .on('click', d => d.data.artist ? onClickArtist(d.data.id) : true)\n    .on('click', d => {\n      var artists = d.leaves()\n      return d.data.artist ? \n        artists.forEach(l => onClickArtist(l.data.id)) :\n        onClickGenre(artists.map(l => l.data.id))\n\n\n      // console.log(d.leaves())\n      // (d.data.artist ? onClickArtist(d.data.id) : d.descendants().forEach(l => onClickArtist(l.data.id)))\n    })\n    .transition(200)\n      .attr('opacity', d => {\n        const path = root.path(d).map(p => p.data.id)\n\n        // console.log(d.descendants());\n        var childNames = d.descendants().map(c => c.data.id)\n        // console.log(childNames)\n        return (\n          selectedLegendList.length == 0 || \n          // selectedLegendList.includes(d.data.id) \n          selectedLegendList.some(r=> childNames.indexOf(r) >= 0) \n          ? 1 : 0.2\n        )})\n\n};","// Mouseover line adapted from here\n// https://bl.ocks.org/larsenmtl/e3b8b7c2ca4787f77d78f58d41c3da91\n\nimport { \n  select, \n  scaleTime, \n  scaleLinear, \n  extent,\n  axisLeft,\n  axisBottom,\n  format,\n  area,\n  curveBasis,\n  stack,\n  max,\n  sum,\n  stackOffsetWiggle,\n  stackOffsetExpand,\n  stackOrderInsideOut,\n  csv\n} from 'd3';\nimport { colorLegend } from './colorLegend';\n\nexport const stackedAreaVertical = (selection, props) => {\n  const {\n    dataToStack,\n    topArtists,\n    colorScale,\n    selectedLegendList,\n    width,\n    height,\n    numArtists,\n    onClick,\n    year,\n    amplitude,\n    position\n  } = props;\n\n  const topArtistsTrimmed = topArtists.slice(0, numArtists);\n  const margin = {left: 0, right: 0}\n  const innerWidth = width - margin.left - margin.right\n  \n  selection\n    .attr('transform', `rotate(-90)`);\n\n  const g = selection.selectAll('.container').data([null]);\n  const gEnter = g.enter()\n    .append('g')\n      .attr('class', 'container');\n\n  const h = selection.selectAll('.axes').data([null]);\n  const hEnter = h.enter()\n    .append('g')\n      .attr('class', 'axes');\n\n  const artistText = selection.selectAll('.artist-text').data(selectedLegendList)\n  const artistTextEnter = artistText.enter().append('g')\n      .attr('class', 'artist-text d-block d-md-none')\n      .attr('transform', 'translate(-20, 95) rotate(90)')\n  \n  artistTextEnter.merge(artistText)\n    .append('text')\n      .transition()\n        .duration(500)\n      .attr('x', '0')\n      .attr('y', '0')\n      .attr('fill', d => colorScale(d))\n      .text(d => d)\n\n  artistText.exit()\n    .remove()\n \n  const xValue = d => d.week;\n\n  const xAxisLabel = 'Week';\n  const yAxisLabel = 'Plays';\n  \n  // X-axis and scale\n  // This converts from the week scale to a day scale\n  const getDateFromWeek = (weekNumber) => {\n    const numberOfDays = 7*(weekNumber-1)+1;\n    return new Date(year, 0, numberOfDays);\n  }\n\n  const xScale = scaleTime()\n    .domain([\n      new Date(year, 0, 1), \n      new Date(year, 11, 31)])\n      // getDateFromWeek(max(Object.keys(dataToStack).map(d => parseInt(d, 10))))])\n    .range([0, -height])\n    // .nice()\n\n  const yScale = scaleLinear()\n    .domain([0, max(dataToStack.map(d => sum(Object.values(d))))])\n    .range([0, width * amplitude])\n    .nice(); \n  \n  const xAxis = axisBottom(xScale)\n    .ticks(12)\n    .tickSize(0)\n    // .tickPadding(15)\n    .tickFormat(d3.timeFormat('%B'));\n  \n  // From https://vizhub.com/curran/501f3fe24cfb4e6785ac75008b530a83\n  const xAxisG = g.select('.x-axis');\n  const xAxisGEnter = gEnter\n    .append('g').attr('class', 'x-axis');\n  \n  xAxisGEnter\n    .merge(xAxisG)\n      .call(xAxis)\n      .selectAll('text')\n        .attr('text-anchor', 'start')\n        .attr('transform', `rotate(90)`);\n\n  xAxisGEnter.merge(xAxisG).selectAll('.domain').remove()\n  \n  // xAxisGEnter.append('text')\n  //     .attr('class', 'axis-label')\n  //     .attr('transform', `rotate(90)`)\n  //     .attr('y', 50)\n  //     .attr('x', 0 / 2)\n  //     .attr('fill', 'black')\n  //     .text(xAxisLabel);\n \n  const yAxisTickFormat = number =>\n    format('.2s')(number)\n      .replace('.0', '');\n  \n  const yAxis = axisLeft(yScale)\n    .ticks('none')\n    // .tickSize(-width)\n    // .tickPadding(5)\n    // .tickFormat(yAxisTickFormat);\n  \n  const yAxisG = g.select('.y-axis');\n  const yAxisGEnter = gEnter\n    .append('g')\n      .attr('class', 'y-axis');\n  \n  yAxisGEnter\n    .merge(yAxisG)\n      .transition().duration(200)\n      .call(yAxis);\n  \n  yAxisGEnter.merge(yAxisG).selectAll('.domain').remove();\n  \n  // yAxisGEnter.append('text')\n  //   .attr('class', 'axis-label')\n  //   .attr('y', -35)\n  //   .attr('x', -height / 2)\n  //   .attr('fill', 'black')\n  //   .attr('transform', `rotate(-90)`)\n  //   .attr('text-anchor', 'middle')\n  //   .text(yAxisLabel);\n  \n  var stack = d3.stack(dataToStack)\n    .keys(topArtistsTrimmed)\n    // .offset(d3.stackOffsetSilhouette)\n    .offset(d3.stackOffsetWiggle)\n    // .offset(d3.stackOffsetNone)\n    // .offset(d3.stackOffsetExpand)\n    .order(d3.stackOrderInsideOut)\n\n  var series = stack(dataToStack);\n  \n  // console.log(series)\n  // console.log(series[0].map(d => d[0]))\n\n  const ag = area()\n    .x()\n\n  const areaGenerator = area()\n    .x(d => xScale(getDateFromWeek(d.data.week)))\n    .y0(d => yScale(selectedLegendList.length != 0 && (selectedLegendList.includes(d.artist)) ? 0 : d[0]))\n    .y1(d => yScale(selectedLegendList.length != 0 && (selectedLegendList.includes(d.artist)) ? d[1] - d[0] : d[1]))\n    .curve(curveBasis);\n  \n  const lastYValue = d =>\n    yValue(d.values[d.values.length - 1]);\n  \n  const lines = selection.selectAll('.line-path').data(series);\n\n  const linesEnter = lines.enter()\n    .append('path')\n      .attr('class', 'line-path') \n      .attr('fill', d => colorScale(d.key))\n      .attr('transform', `translate(0, ${(width)/2 + position})`)\n\n  lines.merge(linesEnter)\n    .on('click', d => onClick(d.key))\n    .attr('d', areaGenerator)\n    .append('title')\n      .text(d => d.key)\n  \n  lines.merge(linesEnter)\n    .transition()\n      .duration(200)\n        .attr('opacity', d => {\n          return (selectedLegendList.length == 0 || selectedLegendList.includes(d.key)) ? 1 : 0})\n        .attr('stroke-width', d => (selectedLegendList.length != 0 || selectedLegendList.includes(d.key)) ? 0.05 : 0);\n\n  const annotations = []\n  csv('https://raw.githubusercontent.com/OxfordComma/oxfordcomma.github.io/master/concert_dates.csv').then(annotationData => {\n    annotationData.forEach(a => {\n      a.date = new Date(a.date)\n      annotations.push({\n        note: {\n          title: a.artists,\n          label: a.date.getMonth() + ' ' + a.date.getDate() + ' at ' + a.venue\n        },\n        x: 400,\n        y: 200, \n        dx: 0,\n        dy: 0,\n        connector: {\n          curve: d3.curveLinear,\n          points: [[-50, 0]]\n        }\n      })\n    });\n  });\n};\n","import {\n  select,\n  json,\n  cluster,\n  hierarchy,\n  linkHorizontal,\n  zoom,\n  event,\n  scaleSequential,\n  scaleOrdinal,\n  max,\n  interpolateRdBu,\n  interpolatePlasma,\n  schemeCategory10,\n  interpolateRainbow\n} from 'd3';\nimport { loadTreeData } from './loadTreeData';\nimport { treemap } from './treemap';\nimport { stackedAreaVertical } from './stackedAreaVertical';\nimport { colorLegend } from './colorLegend';\n\nvar jsonData, artistData, byWeekPlaysGenre, byWeekPlaysArtist, totalPlaysByArtist;\nvar artistColorScale, genreColorScale;\nvar topArtists, topArtistsTrimmed, topGenres;\nvar playScale;\nvar selectedArtists = []; \nvar selectedGenre;\nvar deepestGenresByArtist;\nvar byWeekPlays;\n\nvar verticalAreaG, artistLegendG, treeG;\nvar treeWidth, treeHeight, areaWidth, areaHeight;\n\nconst numArtists = 40;\n\nloadTreeData('https://raw.githubusercontent.com/OxfordComma/oxfordcomma.github.io/master/music2018.csv').then(data => {\n  jsonData = data.jsonData;\n  artistData = data.artistData;\n  byWeekPlaysGenre = data.byWeekPlaysGenre;\n  byWeekPlaysArtist = data.byWeekPlaysArtist;\n  topGenres = data.topGenres;\n  topArtists = data.topArtists;\n  deepestGenresByArtist = data.deepestGenresByArtist;\n  totalPlaysByArtist = data.totalPlaysByArtist;\n\n\n  // treeWidth = document.getElementById('tree').clientWidth;\n  treeWidth = document.getElementById('tree').clientWidth < 500 ? 1000 : document.getElementById('tree').clientWidth\n  treeHeight = 1000//window.innerHeight - document.getElementById('navbar-placeholder').clientHeight - 5;\n\n  areaWidth = document.getElementById('stacked-area-artist-vertical').clientWidth;\n  areaHeight = treeHeight;  \n\n  const verticalAreaSvg = select('.stacked-area-artist-svg')\n      .attr('height', areaHeight)\n      .attr('width', areaWidth)\n\n  // verticalAreaSvg.append('rect')\n  //     .attr('width', '100%')\n  //     .attr('height', '100%')\n  //     .attr('fill', 'black')\n\n  const treeSvg = select('.tree')\n    .attr('height', treeHeight)\n    .attr('width', treeWidth)\n\n  // treeSvg.append('rect')\n  //     .attr('width', '100%')\n  //     .attr('height', '100%')\n  //     .attr('fill', 'black')\n\n  verticalAreaG = verticalAreaSvg.append('g')\n    // .attr('class', 'd-none d-md-block')\n    .attr('transform', `translate(${0}, ${0}), rotate(90)`);\n\n  artistLegendG = verticalAreaSvg.append('g')\n    .attr('class', 'legend')\n    .attr('transform', `translate(${5},${5})`)\n\n  treeG = treeSvg.append('g')\n    .attr('class', 'tree')\n\n\n  topArtistsTrimmed = topArtists.slice(0, numArtists);\n  const topGenresTrimmed = topArtistsTrimmed.map(a => deepestGenresByArtist[a])\n  addArtistsToTree(topArtistsTrimmed, jsonData);\n  removeEmptyLeaves(jsonData)\n  \n  topArtistsTrimmed = hierarchy(jsonData).leaves().map(d=>d.data.id);\n\n\n  artistColorScale = scaleOrdinal()\n    .domain(topArtistsTrimmed);\n\n  const n = artistColorScale.domain().length;\n  \n  artistColorScale\n    .range(artistColorScale.domain().map((d, i) => interpolateRainbow(i/(n+1))));\n\n  genreColorScale = scaleOrdinal()\n    .domain(topGenres)\n    .range(schemeCategory10);\n\n  playScale = scaleSequential(interpolatePlasma)\n    .domain([0, max(Object.values(totalPlaysByArtist)) + 100]);\n\n  render();\n})\n\nconst onClickGenre = d => {\n  selectedArtists = selectedArtists.sort().join(',') === d.sort().join(',') ? [] : d;\n  console.log(selectedArtists)\n  render(); \n};\n\nconst onClickArtist = d => {\n\n  if (!selectedArtists.includes(d))\n    selectedArtists.push(d);\n  else\n  selectedArtists = selectedArtists.filter(val => val != d);\n  console.log(selectedArtists)\n  render(); \n};\n\nconst addArtistsToTree = function(artists, t) {\n    artists.forEach(a => (deepestGenresByArtist[a] == t.id ? t.children.push({id: a, artist: true, children: []}) : 1))\n    if (t.children)\n      t.children.forEach(c => addArtistsToTree(artists, c))\n  }\n\nconst removeEmptyLeaves = function(t) {\n    if (t.children.length > 0)\n    {\n      var toRemove = []\n      t.children.forEach(c => {\n        removeEmptyLeaves(c)\n\n        if (!c.artist && c.children.length == 0)\n          toRemove.push(c.id)\n      })\n      if (toRemove)\n        t.children = t.children.filter(c => !toRemove.includes(c.id))\n    }\n  }\n\nconst render = () => {\n  treeG.call(treemap, {\n    jsonData,\n    deepestGenresByArtist,\n    totalPlaysByArtist,\n    topArtists,\n    width: treeWidth,\n    height: treeHeight,\n    colorScale: artistColorScale,\n    selectedLegendList: selectedArtists,\n    onClickArtist: onClickArtist,\n    onClickGenre: onClickGenre\n  });\n\n  verticalAreaG.call(stackedAreaVertical, {\n    dataToStack: byWeekPlaysArtist,\n    topArtists: topArtistsTrimmed,\n    colorScale: artistColorScale,\n    selectedLegendList: selectedArtists,\n    width: areaWidth,\n    height: areaHeight,\n    numArtists: numArtists,\n    onClick: onClickArtist,\n    year: 2018,\n    amplitude: 1,\n    position: 0\n  });\n\n  // artistLegendG.call(colorLegend, {\n  //   colorScale: artistColorScale,\n  //   circleRadius: 5,\n  //   spacing: 15,\n  //   textOffset: 12,\n  //   backgroundRectWidth: 135,\n  //   onClick: onClickArtist,\n  //   selectedLegendList: selectedArtists,\n  //   numArtists: numArtists\n  // });\n}"],"names":["csv","json","hierarchy","cluster","linkHorizontal","scaleTime","scaleLinear","max","sum","axisBottom","axisLeft","area","curveBasis","select","scaleOrdinal","interpolateRainbow","schemeCategory10","scaleSequential","interpolatePlasma"],"mappings":"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"}