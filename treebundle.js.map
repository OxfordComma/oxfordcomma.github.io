{"version":3,"file":"treebundle.js","sources":["loadData.js","treemap.js","colorLegend.js","stackedAreaVertical.js","tree_main.js"],"sourcesContent":["import { csv, hierarchy, json, nest } from 'd3';\n// import LastFM from 'last-fm';\n\nexport const loadData = url => {\n  return Promise.all([csv(url), json('data.json')]).then(data => {\n\n    const csvData = data[0];\n    var jsonData = data[1];\n    const startDate = new Date('2018-01-01');\n\n    console.log(csvData)\n    var sortedGenreList = [];\n    var sortedArtistList = [];\n    var totalPlaysArtist = {};\n    var totalPlaysGenre = {};\n    var deepestGenresByArtist = {};\n    \n    var topGenres = [];\n    var topArtists = [];\n    var byWeekPlaysGenre = [];\n    var byWeekPlaysArtist = [];\n    var weekDict = {};\n    const numArtists = 100;\n    const numGenres = 50;\n\n    // Bad tags included in the data set. Removed anything country-specific or anything I considered 'not a genre'\n    const genresToRemove = ['seenlive', 'femalevocalists', '', 'british', 'japanese', 'ofwgkta', 'irish', 'usa', 'australia', 'australian', 'under2000 listeners', '90s', '80s', '70s', '60s', 'all', 'philadelphia', 'scottish', 'sanremo', 'newzealand', 'twinkledaddies', 'sanremo2009', 'political', 'american', 'canadian', 'italian', 'psychadelic', 'instrumental', 'ambient', 'chillout', 'singersongwriter', 'acoustic'];\n\n    // Remove these character from the genre names\n    const punctuationToRemove = [' ', '-'];\n\n    var genreHierarchy = hierarchy(jsonData); \n    genreHierarchy.data = jsonData; \n\n    genreHierarchy.sort((a,b) => {\n      const aLen = a.children === undefined ? 0 : a.children.length;\n      const bLen = b.children === undefined ? 0 : b.children.length;\n      return(bLen - aLen); \n    });\n        \n    genreHierarchy.descendants().forEach(d => {\n      const name = d.data.id;\n      // byWeekPlaysGenre.push(name);\n      totalPlaysGenre[name] = { \n        depth: d.depth,\n        plays: 0,\n      };  \n    })\n        \n    csvData.forEach(d => {\n      d.listen_date = new Date(d.listen_date);\n  \n      if (d.genre === \"\")\n        return;\n\n      d.genre = d.genre\n        .replace(/[[\\]]/g, '')\n        .split(',')\n        .map(g => g.toLowerCase().replace(/\\s|-/g, ''))\n        .filter(g => !genresToRemove.includes(g))\n      \n      //If there's no genre we can't do much\n      if (d.genre.length == 0)\n        return;\n\n      // Convert time since Jan 1, 2018 from msec to # of weeks\n      // 1000 msec/sec, 60 sec/min, 60 min/hr, 24 hr/day, 7 days/week, +1 so it starts on week 1\n      d.weekNum = (parseInt((d.listen_date - startDate)/1000/60/60/24/7 + 1));\n      \n      const maxGenre = d.genre[0];\n      \n      if (totalPlaysArtist[d.artist] === undefined)\n        totalPlaysArtist[d.artist] = 1;\n      else\n        totalPlaysArtist[d.artist] += 1;\n      \n      //Add in the genres not in the tree but  give them negative depth so they are sorted last\n      d.genre.forEach(g => {\n        if (totalPlaysGenre[g] === undefined)\n          totalPlaysGenre[g] = { depth: -1, plays: 1};\n        else\n          totalPlaysGenre[g].plays += 1;\n      })\n\n      d.genre.sort((a, b) => totalPlaysGenre[b].depth - totalPlaysGenre[a].depth); \n\n\n      if (deepestGenresByArtist[d.artist] === undefined)\n        deepestGenresByArtist[d.artist] = d.genre[0];\n      \n      if (weekDict[d.weekNum] === undefined)\n        weekDict[d.weekNum] = {artists: {}, genres: {}};\n      \n      if (weekDict[d.weekNum].artists[d.artist] === undefined)\n        weekDict[d.weekNum].artists[d.artist] = 1;\n      else\n        weekDict[d.weekNum].artists[d.artist] += 1;\n        \n      if (weekDict[d.weekNum].genres[d.genre[0]] === undefined)\n        weekDict[d.weekNum].genres[d.genre[0]] = 1;\n      else\n        weekDict[d.weekNum].genres[d.genre[0]] += 1; \n    });\n    \n    \n    // Sort the list of genres according to total play count\n    sortedGenreList = Object.keys(totalPlaysGenre).sort((a, b) => totalPlaysGenre[b].plays - totalPlaysGenre[a].plays);\n    sortedArtistList = Object.keys(totalPlaysArtist).sort((a, b) => totalPlaysArtist[b] - totalPlaysArtist[a]); \n    \n    Object.keys(weekDict).forEach(w => {\n      const i = +w - 1;\n      var obj = {week: i + 1};\n      \n      topArtists = sortedArtistList.slice(0, numArtists);\n      topGenres = sortedGenreList.slice(0, numGenres);\n      \n      var genreObj = {week: i + 1};\n      var artistObj = {week: i + 1};\n      \n      topArtists.forEach(a => {\n        artistObj[a] = weekDict[w].artists[a] ? weekDict[w].artists[a] : 0;\n      });\n      \n      // artistObj['everything else'] = 0;\n      // genreObj['everything else'] = 0;\n      // Object.keys(weekDict[w].artists).forEach(a => {\n      //   if (!topArtists.includes(a))\n      //     artistObj['everything else'] += weekDict[w].artists[a];  \n      // });\n      byWeekPlaysArtist.push(artistObj);\n\n      \n      // Object.keys(weekDict[w].genres).forEach(g => {\n      //   if (!topGenres.includes(g))\n      //     genreObj['everything else'] += weekDict[w].genres[g];  \n      // });\n      \n      topGenres.forEach(g => {\n        genreObj[g] = weekDict[w].genres[g] ? weekDict[w].genres[g] : 0;\n      });\n      byWeekPlaysGenre.push(genreObj); \n    });\n    // topArtists.push('everything else');\n    // console.log(topGenres)\n    // topGenres.push('everything else');\n\n\n    var toReturn = {}; \n    // toReturn.csvData = csvData; \n    toReturn.jsonData = genreHierarchy.data;\n    toReturn.byWeekPlaysGenre = byWeekPlaysGenre.reverse(); \n    toReturn.byWeekPlaysArtist = byWeekPlaysArtist;\n    toReturn.totalPlaysGenre = totalPlaysGenre;\n    toReturn.totalPlaysArtist = totalPlaysArtist;\n    toReturn.deepestGenresByArtist = deepestGenresByArtist;\n    toReturn.topGenres = topGenres;\n    toReturn.topArtists = topArtists;\n    console.log(toReturn);  \n    return toReturn;  \n  }).then(r => {return r;}); \n};","import { \n  hierarchy, \n  cluster, \n  select,\n\tlinkHorizontal,\n  linkVertical\n} from 'd3';\n\nexport const treemap = (selection, props) => {\n  const {\n    jsonData,\n    deepestGenresByArtist,\n    totalPlaysArtist,\n    topArtists,\n    width,\n    height,\n    playScale,\n    selectedLegendList\n  } = props;\n\n  var maxGenreDepth = 0;\n  \n  const treeLayout = cluster()\n    .size([height, width])\n    .separation((a, b) => { \n      return (a.parent == b.parent ? 1 : 1); \n    })\n\n  const root = hierarchy(jsonData);  \n  \n  root.descendants().forEach(d => {\n    const genre = d.data.id;\n    maxGenreDepth = d.depth > maxGenreDepth ? d.depth : maxGenreDepth;\n      Object.keys(deepestGenresByArtist).filter(a => deepestGenresByArtist[a] === genre).forEach(f => {\n      if (totalPlaysArtist[f] < 5 || !topArtists.includes(f))\n        return;\n\n      var newNode = hierarchy({\n        id: f, \n        artist: f, \n        plays: totalPlaysArtist[f]\n      });\n\n      newNode.parent = d;  \n      if (d.children === undefined)\n        d.children = [];\n\n      d.children.push(newNode);\n    })\n  })\n  \n  root.sort((a,b) => {\n    var aLen = a.children === undefined ? -1 : a.children.length;\n    var bLen = b.children === undefined ? -1 : b.children.length;\n    return(bLen - aLen); \n  });\n  \n  const tree = treeLayout(root);\n  const links = tree.links();    \n  const linkPathGenerator = linkHorizontal()\n    .x(d => d.y)\n    .y(d => d.x);\n\n  const treeSpread = 170\n\n  links.forEach(d => {\n    if (d.target.data.artist)\n      d.target.y = (maxGenreDepth + 1) * treeSpread;\n    else\n  \t\td.target.y = d.target.depth * treeSpread;\n  }); \n\n  selection.selectAll('path').data(links)\n    .enter().append('path')\n      .attr('d', linkPathGenerator)\n      // .attr('opacity', );\n\n  const treeText = selection.selectAll('text').data(root.descendants());\n  const treeTextEnter = treeText.enter().append('text')\n    .attr('x', d => d.y)\n    .attr('y', d => d.x)\n    .attr('dy', '0.32em')\n    .attr('text-anchor', d => d.data.artist ? 'start' : 'end')\n    .attr('fill', d => d.data.artist ? playScale(d.data.plays) : 'black')\n    .attr('font-size', d => d.data.artist ? 2.1*Math.log(d.data.plays) * 2 : '1.1em')\n    // .attr('font-size', '1.5em')\n    .text(d => d.data.id); \n\n  treeText.merge(treeTextEnter)\n    .transition(200)\n      .attr('opacity', d => (selectedLegendList.length == 0 || selectedLegendList.includes(d.data.id)) ? 1 : 0.2)\n};","export const colorLegend = (selection, props) => {\n  const {\n    colorScale,\n    circleRadius,\n    spacing,\n    textOffset,\n    backgroundRectWidth,\n    onClick,\n    selectedLegendList\n  } = props;      \n\n  const backgroundRect = selection.selectAll('rect')\n    .data([null]);             \n  \n  const n = colorScale.domain().length; \n\n  backgroundRect.enter().append('rect')\n    .merge(backgroundRect)\n      .attr('x', -circleRadius * 2)   \n      .attr('y', -circleRadius * 2)   \n      .attr('rx', circleRadius * 2)   \n      .attr('width', backgroundRectWidth)\n      .attr('height', spacing * n + circleRadius * 2) \n      .attr('fill', 'white')\n      .attr('opacity', 0);\n\n  const groups = selection.selectAll('.legend')\n    .data(colorScale.domain());\n  \n  const groupsEnter = groups\n    .enter().append('g')\n      .attr('class', 'legend');\n  \n  groupsEnter\n    .merge(groups)\n      .attr('transform', (d, i) => `translate(0, ${i * spacing})`)\n      .on('click', onClick);\n      \n  groupsEnter\n    .merge(groups)\n      .transition().duration(200)\n      .attr('transform', (d, i) => `translate(0, ${i * spacing})`)\n      .attr('opacity', d =>\n      {\n        // console.log(!selectedLegendItem);\n        return (selectedLegendList.length == 0 || selectedLegendList.includes(d)) ? 1 : 0.2;\n      })\n\n  groups.exit().remove();\n  \n  groupsEnter.append('circle')\n    .merge(groups.select('circle')) \n      .attr('r', circleRadius)\n      .attr('fill', colorScale);      \n  \n  groupsEnter.append('text')\n    .merge(groups.select('text'))   \n      .text(d => d)\n      .attr('dy', '0.32em')\n      .attr('x', textOffset)\n}","// Mouseover line adapted from here\n// https://bl.ocks.org/larsenmtl/e3b8b7c2ca4787f77d78f58d41c3da91\n\nimport { \n  select, \n  scaleTime, \n  scaleLinear, \n  extent,\n  axisLeft,\n  axisBottom,\n  format,\n  nest,\n  line,\n  area,\n  curveBasis,\n  mouse,\n  stack,\n  max,\n  sum,\n  time,\n  stackOffsetWiggle,\n  csv\n} from 'd3';\nimport { colorLegend } from './colorLegend';\n\nexport const stackedAreaVertical = (selection, props) => {\n  const {\n    dataToStack,\n    legend,\n    colorScale,\n    selectedLegendList,\n    width,\n    height,\n  } = props;\n\n  const margin = {left: 175, right: 100}\n  const innerWidth = width - margin.left - margin.right\n\n  const g = selection.selectAll('.container').data([null]);\n  const gEnter = g.enter()\n    .append('g')\n      .attr('class', 'container');\n \n  const xValue = d => d.week;\n\n  const xAxisLabel = 'Week';\n  const yAxisLabel = 'Plays';\n  \n  // X-axis and scale\n  // console.log(new Date(2018, 0, (extent(dataToStack, xValue)[0] - 1) * 7 + 1))\n  // This converts from the week scale to a day scale\n  const getDateFromWeek = (weekNumber) => {\n    const numberOfDays = 7*(weekNumber-1)+1;\n    return new Date(2018, 0, numberOfDays);\n  }\n\n  const xScale = scaleTime()\n    .domain([\n      new Date(2018, 0, 1), \n      new Date(2019, 1, 1)])\n    .range([0, height])\n    .nice()\n  \n  const yScale = scaleLinear()\n    .domain([0, max(dataToStack.map(d => sum(Object.values(d))))])\n    .range([0, innerWidth])\n    .nice(); \n  \n  const xAxis = axisBottom(xScale)\n    // .ticks(9)\n    .tickSize(0)\n    // .tickPadding(15)\n    .tickFormat(d3.timeFormat('%B'));\n  \n  // From https://vizhub.com/curran/501f3fe24cfb4e6785ac75008b530a83\n  const xAxisG = g.select('.x-axis');\n  const xAxisGEnter = gEnter\n    .append('g').attr('class', 'x-axis');\n  \n  xAxisGEnter\n    .merge(xAxisG)\n      .call(xAxis)\n      .attr('transform', `translate(0,${-250})`)\n      .selectAll('text')\n        .attr('text-anchor', 'end')\n        .attr('transform', `rotate(-90)`);\n\n  xAxisGEnter.merge(xAxisG).selectAll('.domain').remove()\n  \n  // xAxisGEnter.append('text')\n  //     .attr('class', 'axis-label')\n  //     .attr('transform', `rotate(90)`)\n  //     .attr('y', 50)\n  //     .attr('x', 0 / 2)\n  //     .attr('fill', 'black')\n  //     .text(xAxisLabel);\n \n  const yAxisTickFormat = number =>\n    format('.2s')(number)\n      .replace('.0', '');\n  \n  const yAxis = axisLeft(yScale)\n    .ticks('none')\n    // .tickSize(-width)\n    // .tickPadding(5)\n    // .tickFormat(yAxisTickFormat);\n  \n  const yAxisG = g.select('.y-axis');\n  const yAxisGEnter = gEnter\n    .append('g')\n      .attr('class', 'y-axis');\n  \n  yAxisGEnter\n    .merge(yAxisG)\n      .transition().duration(200)\n      .call(yAxis);\n  \n  yAxisGEnter.merge(yAxisG).selectAll('.domain').remove();\n  \n  // yAxisGEnter.append('text')\n  //   .attr('class', 'axis-label')\n  //   .attr('y', -35)\n  //   .attr('x', -height / 2)\n  //   .attr('fill', 'black')\n  //   .attr('transform', `rotate(-90)`)\n  //   .attr('text-anchor', 'middle')\n  //   .text(yAxisLabel);\n  \n  var stack = d3.stack(dataToStack)\n    .keys(legend)\n    .offset(d3.stackOffsetWiggle);\n\n  var series = stack(dataToStack);\n  // console.log(series)\n  const areaGenerator = area()\n    .x(d => xScale(new Date(2018, 0, (d.data.week - 1) * 7)))\n    .y0(d => yScale(selectedLegendList.length != 0 && (selectedLegendList.includes(d.artist)) ? 0 : d[0]))\n    .y1(d => yScale(selectedLegendList.length != 0 && (selectedLegendList.includes(d.artist)) ? d[1] - d[0] : d[1]))\n    .curve(curveBasis);\n  \n  const lastYValue = d =>\n    yValue(d.values[d.values.length - 1]);\n  \n  const lines = selection.selectAll('.line-path').data(series);\n  const linesEnter = lines.enter().append('path')\n      .attr('class', 'line-path') \n      .attr('fill', d => colorScale(d.key))\n      .attr('stroke', 'black')\n      \n  lines.merge(linesEnter)\n    .transition()\n      .duration(200)\n      .attr('d', areaGenerator)\n      .attr('opacity', d => (selectedLegendList.length == 0 || selectedLegendList.includes(d.key)) ? 1 : 0)\n      .attr('stroke-width', d => (selectedLegendList.length != 0 || selectedLegendList.includes(d.key)) ? 0.05 : 0);\n\n  // console.log(document.getElementById('legend'));\n  const annotations = []\n  csv('https://raw.githubusercontent.com/OxfordComma/oxfordcomma.github.io/master/concert_dates.csv').then(annotationData => \n  {\n    annotationData.forEach(a => {\n      a.date = new Date(a.date)\n      annotations.push({\n        note: {\n          title: a.artists,\n          label: a.date.getMonth() + ' ' + a.date.getDate() + ' at ' + a.venue\n        },\n        x: 400,\n        y: 200, \n        dx: 0,\n        dy: 0,\n        connector: {\n          curve: d3.curveLinear,\n          points: [[-50, 0]]\n        }\n      })\n    });\n    // console.log(annotations);\n  //   annotations.map(function(d){ d.color = \"#8a2d96\"; return d});\n  //   const makeAnnotations = d3.annotation()\n  //     .type(d3.annotationCalloutCurve)\n  //     .annotations(annotations)\n  //     // .editMode(true)\n  //     .notePadding(5)\n\n  //   var annotationG = d3.selectAll(\".stacked-area-artist-vertical\")//.data([null])\n  //   // annotationG.enter()\n  //     .append(\"g\")\n  //     .attr(\"class\", \"annotation-group\")\n  //     .call(makeAnnotations)\n  });\n\n  // const annotations = [\n  // {\n  //   note: {\n  //     title: \"Tiny Moving Parts and Mom Jeans\",\n  //     label: \"February 10th at the Sinclair\"\n  //   },\n  //   x: 230, y: xScale(new Date('10-Feb-2018')), dy: 65, dx: -117, \n  //   connector: {\n  //     curve: d3.curveLinear,\n  //     points: [[-50, 0]]\n  //   }\n  // }, \n  // {\n  //   note: {\n  //     title: \"Sorority Noise\",\n  //     label: \"April 4th at the Paradise Rock Club\"\n  //   },\n  //   x: 160, y: xScale(new Date('4-Apr-2018')), dy: -50, dx: -65,\n  //   connector: {\n  //     curve: d3.curveLinear,\n  //     points: [[-25, 0]]\n  //   }\n  // },\n  // {\n  //   note: {\n  //     title: \"Lord Huron\",\n  //     label: \"April 30th at the House of  Blues\"\n  //   },\n  //   x: 220, y: xScale(new Date('30-Apr-2018')), dy: -50, dx: -115,\n  //   connector: {\n  //     curve: d3.curveLinear,\n  //     points: [[-75, 0]]\n  //   }\n  // },   \n  // {\n  //   note: {\n  //     title: \"The Killers, The National, and Julien Baker\",\n  //     label: \"May 23rd-25th at Boston Calling\"\n  //   },\n  //   x: 120, y: xScale(new Date('24-May-2018')), dy: -50, dx: -15,\n  //   connector: {\n  //     curve: d3.curveLinear,\n  //     points: [[-50, 0]]\n  //   }\n  // },   \n  // // {\n  // //   note: {\n  // //     title: \"The National\",\n  // //     label: \"May 24th at Boston Calling\"\n  // //   },\n  // //   x: 210, y: 1200, dy: 0, dx: -150\n  // // },   \n  // // {\n  // //   note: {\n  // //     title: \"Julien Baker\",\n  // //     label: \"May 25th at Boston Calling\"\n  // //   },\n  // //   x: 210, y: 1250, dy: 0, dx: -150\n  // // },   \n  // {\n  //   note: {\n  //     title: \"Japanese Breakfast\",\n  //     label: \"June 1st at the Sinclair\"\n  //   },\n  //   x: 150, y: xScale(new Date('1-Jun-2018')), dy: 30, dx: -32,\n  //   connector: {\n  //     curve: d3.curveLinear,\n  //     points: [[-50, 0]]\n  //   }\n  // },   \n  // {\n  //   note: {\n  //     title: \"Bon Iver\",\n  //     label: \"August 5th at the LA Bowl\"\n  //   },\n  //   x: 230, y: xScale(new Date('5-Aug-2018')), dy: 70, dx: -125,\n  //   connector: {\n  //     curve: d3.curveLinear,\n  //     points: [[-50, 0]]\n  //   }\n  // },   \n  // {\n  //   note: {\n  //     title: \"Mitski\",\n  //     label: \"October 20th at the House of Blues\"\n  //   },\n  //   x: 210, y: 2150, dy: 0, dx: -150,\n  //   connector: {\n  //     curve: d3.curveLinear,\n  //     points: [[-50, 0]]\n  //   }\n  // },   \n  // {\n  //   note: {\n  //     title: \"Mom Jeans (again)\",\n  //     label: \"November 1st at the ONCE Ballroom\"\n  //   },\n  //   x: 210, y: 2350, dy: 0, dx: -150,\n  //   connector: {\n  //     curve: d3.curveLinear,\n  //     points: [[-50, 0]]\n  //   }\n  // }, \n  // {\n  //   note: {\n  //     title: \"Pinegrove\",\n  //     label: \"November 24th at the Sinclair\"\n  //   },\n  //   x: 210, y: 2500, dy: 0, dx: -150,\n  //   connector: {\n  //     curve: d3.curveLinear,\n  //     points: [[-50, 0]]\n  //   }\n  // },\n  // {\n  //   note: {\n  //     title: \"Tiny Moving Parts (again)\",\n  //     label: \"November 25th at the House of Blues\"\n  //   },\n  //   x: 210, y: 2750, dy: 0, dx: -150,\n  //   connector: {\n  //     curve: d3.curveLinear,\n  //     points: [[-50, 0]]\n  //   }\n  // }].map(function(d){ d.color = \"#8a2d96\"; return d})\n};\n","import {\n  select,\n  json,\n  cluster,\n  hierarchy,\n  linkHorizontal,\n  zoom,\n  event,\n  scaleSequential,\n  scaleOrdinal,\n  max,\n  interpolateRdBu,\n  interpolatePlasma,\n  schemeCategory10\n} from 'd3';\nimport { loadData } from './loadData';\nimport { treemap } from './treemap';\nimport { stackedAreaVertical } from './stackedAreaVertical';\nimport { colorLegend } from './colorLegend';\n\nvar jsonData, artistData, byWeekPlaysGenre, byWeekPlaysArtist, totalPlaysArtist;\nvar artistColorScale, genreColorScale;\nvar topArtists, topGenres;\nvar playScale;\nvar selectedArtists = []; \nvar selectedGenre;\nvar deepestGenresByArtist;\nvar byWeekPlays;\n// var genreLegendG, artistLegendG;\n\nconst verticalAreaSvg = select('.stacked-area-artist-vertical');\nconst treeSvg = select('.tree')\n\nconst colorValue = d => d.artist;\nconst colorScale = scaleOrdinal();\n\nconst verticalAreaG = verticalAreaSvg.append('g')\n  .attr('transform', `translate(${250}, 0), rotate(90)`);\n\nconst artistLegendG = verticalAreaSvg.append('g')\n  .attr('class', 'legend')\n  .attr('transform', `translate(${5},${20})`)\n\nconst treeG = treeSvg.append('g')\n  .attr('class', 'tree')\n\nloadData('https://raw.githubusercontent.com/OxfordComma/oxfordcomma.github.io/master/output_12-5-18-10-45-41.csv').then(data => {\n  jsonData = data.jsonData;\n  artistData = data.artistData;\n  byWeekPlaysGenre = data.byWeekPlaysGenre;\n  byWeekPlaysArtist = data.byWeekPlaysArtist;\n  topGenres = data.topGenres;\n  topArtists = data.topArtists;\n  deepestGenresByArtist = data.deepestGenresByArtist;\n  totalPlaysArtist = data.totalPlaysArtist;\n\n  artistColorScale = scaleOrdinal()\n    .domain(topArtists);\n  \n  const n = artistColorScale.domain().length;\n  \n  artistColorScale\n    .range(artistColorScale.domain().map((d, i) => interpolatePlasma(i/(n+1))));\n\n  genreColorScale = scaleOrdinal()\n    .domain(topGenres)\n    .range(schemeCategory10);\n\n  playScale = scaleSequential(interpolatePlasma)\n    .domain([0, max(Object.values(totalPlaysArtist)) + 100]);\n  render();\n})\n\nconst onClickGenre = d => {\n  console.log('selected genre: ' + d);\n  selectedGenre = d;\n  render(); \n};\n\nconst onClickArtist = d => {\n  if (!selectedArtists.includes(d))\n    selectedArtists.push(d);\n  else\n  selectedArtists = selectedArtists.filter(val => val != d);\n  console.log(selectedArtists)\n  render(); \n};\n\nconst render = () => {\n  treeG.call(treemap, {\n    jsonData,\n    deepestGenresByArtist,\n    totalPlaysArtist,\n    topArtists,\n    width: 500,\n    height: 2500,\n    playScale,\n    selectedLegendList: selectedArtists\n  });\n\n  verticalAreaG.call(stackedAreaVertical, {\n    dataToStack: byWeekPlaysArtist,\n    legend: topArtists,\n    colorScale: artistColorScale,\n    selectedLegendList: selectedArtists,\n    width: 500,\n    height: 2500\n  });\n\n  // genreLegendG.call(colorLegend, {\n  //   colorScale: genreColorScale,\n  //   circleRadius: 5,\n  //   spacing: 15,\n  //   textOffset: 12,\n  //   backgroundRectWidth: 135,\n  //   onClick: onClickGenre,\n  //   selectedLegendItem: selectedGenre\n  // });\n\n  artistLegendG.call(colorLegend, {\n    colorScale: artistColorScale,\n    circleRadius: 5,\n    spacing: 15,\n    textOffset: 12,\n    backgroundRectWidth: 135,\n    onClick: onClickArtist,\n    selectedLegendList: selectedArtists\n  });\n\n  // areaGenreG.call(stackedAreaHorizontal, {\n  //   dataToStack: byWeekPlaysGenre,\n  //   legend: topGenres,\n  //   colorScale: genreColorScale,\n  //   selectedLegendItem: selectedGenre,\n  //   width: 960,\n  //   height: 500,\n  // });\n\n  // areaArtistG.call(stackedAreaHorizontal, {\n  //   dataToStack: byWeekPlaysArtist,\n  //   legend: topArtists,\n  //   colorScale: artistColorScale,\n  //   selectedLegendItem: selectedArtists,\n  //   width: 960,\n  //   height: 500,\n  // });\n}"],"names":["csv","json","hierarchy","cluster","linkHorizontal","scaleTime","scaleLinear","max","sum","axisBottom","axisLeft","area","curveBasis","select","scaleOrdinal","interpolatePlasma","schemeCategory10","scaleSequential"],"mappings":"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IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,EAAC;EAC/B,MAAM,WAAW,CAAC,IAAI,CAAC;EACvB,QAAQ,IAAI,EAAE;EACd,UAAU,KAAK,EAAE,CAAC,CAAC,OAAO;EAC1B,UAAU,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,KAAK;EAC9E,SAAS;EACT,QAAQ,CAAC,EAAE,GAAG;EACd,QAAQ,CAAC,EAAE,GAAG;EACd,QAAQ,EAAE,EAAE,CAAC;EACb,QAAQ,EAAE,EAAE,CAAC;EACb,QAAQ,SAAS,EAAE;EACnB,UAAU,KAAK,EAAE,EAAE,CAAC,WAAW;EAC/B,UAAU,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAC5B,SAAS;EACT,OAAO,EAAC;EACR,KAAK,CAAC,CAAC;EACP;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA,GAAG,CAAC,CAAC;;EAEL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;E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"}